Start

Trying moves for
([0, 0, 0, 1, 1, 1], '_ ', [])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1], ' _', [0, 1])
Number of moves on stack: 3

Trying moves for
([0, 0, 1, 1], ' _', [0, 1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 1, 0, 1], '_ ', [])
Number of moves on stack: 4

Trying moves for
([0, 0, 1, 1, 0, 1], '_ ', [])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([0, 1, 0, 1], ' _', [0, 1])
Number of moves on stack: 5

Trying moves for
([0, 1, 0, 1], ' _', [0, 1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([0, 1, 0, 1, 0], '_ ', [1])
([0, 1, 0, 1, 0, 1], '_ ', [])
Number of moves on stack: 6

Trying moves for
([0, 1, 0, 1, 0, 1], '_ ', [])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([0, 1, 0, 1, 0], '_ ', [1])
Number of moves on stack: 5

Trying moves for
([0, 1, 0, 1, 0], '_ ', [1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 0, 0], ' _', [1, 1, 1])
Number of moves on stack: 7

Trying moves for
([0, 0, 0], ' _', [1, 1, 1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 0, 0, 1], '_ ', [1, 1])
([0, 0, 0, 1, 1], '_ ', [1])
Number of moves on stack: 8

Trying moves for
([0, 0, 0, 1, 1], '_ ', [1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 0, 0, 1], '_ ', [1, 1])
([0, 0, 1, 1], ' _', [1, 0])
([0, 0, 0, 1], ' _', [1, 1])
Number of moves on stack: 9

Trying moves for
([0, 0, 0, 1], ' _', [1, 1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 0, 0, 1], '_ ', [1, 1])
([0, 0, 1, 1], ' _', [1, 0])
([0, 0, 0, 1, 1], '_ ', [1])
([0, 0, 0, 1, 1, 1], '_ ', [])
Number of moves on stack: 10

Trying moves for
([0, 0, 0, 1, 1, 1], '_ ', [])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 0, 0, 1], '_ ', [1, 1])
([0, 0, 1, 1], ' _', [1, 0])
([0, 0, 0, 1, 1], '_ ', [1])
Number of moves on stack: 9

Trying moves for
([0, 0, 0, 1, 1], '_ ', [1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 0, 0, 1], '_ ', [1, 1])
([0, 0, 1, 1], ' _', [1, 0])
Number of moves on stack: 8

Trying moves for
([0, 0, 1, 1], ' _', [1, 0])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 0, 0, 1], '_ ', [1, 1])
Number of moves on stack: 7

Trying moves for
([0, 0, 0, 1], '_ ', [1, 1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1], ' _', [1, 1, 0, 0])
([0, 0, 0], ' _', [1, 1, 1])
Number of moves on stack: 8

Trying moves for
([0, 0, 0], ' _', [1, 1, 1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1], ' _', [1, 1, 0, 0])
Number of moves on stack: 7

Trying moves for
([0, 1], ' _', [1, 1, 0, 0])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1, 0, 0], '_ ', [1, 1])
([0, 1, 0, 1], '_ ', [1, 0])
Number of moves on stack: 8

Trying moves for
([0, 1, 0, 1], '_ ', [1, 0])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1, 0, 0], '_ ', [1, 1])
([1, 1], ' _', [1, 0, 0, 0])
([0, 1], ' _', [1, 0, 0, 1])
Number of moves on stack: 9

Trying moves for
([0, 1], ' _', [1, 0, 0, 1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1, 0, 0], '_ ', [1, 1])
([1, 1], ' _', [1, 0, 0, 0])
([0, 1, 0, 1], '_ ', [0, 1])
Number of moves on stack: 9

Trying moves for
([0, 1, 0, 1], '_ ', [0, 1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1, 0, 0], '_ ', [1, 1])
([1, 1], ' _', [1, 0, 0, 0])
([1, 1], ' _', [0, 1, 0, 0])
([0, 1], ' _', [0, 1, 0, 1])
Number of moves on stack: 10

Trying moves for
([0, 1], ' _', [0, 1, 0, 1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1, 0, 0], '_ ', [1, 1])
([1, 1], ' _', [1, 0, 0, 0])
([1, 1], ' _', [0, 1, 0, 0])
Number of moves on stack: 9

Trying moves for
([1, 1], ' _', [0, 1, 0, 0])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1, 0, 0], '_ ', [1, 1])
([1, 1], ' _', [1, 0, 0, 0])
([1, 1, 0, 0], '_ ', [1, 0])
([1, 1, 1], '_ ', [0, 0, 0])
Number of moves on stack: 10

Trying moves for
([1, 1, 1], '_ ', [0, 0, 0])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1, 0, 0], '_ ', [1, 1])
([1, 1], ' _', [1, 0, 0, 0])
([1, 1, 0, 0], '_ ', [1, 0])
([1, 1], ' _', [0, 0, 0, 1])
([1], ' _', [0, 0, 0, 1, 1])
Number of moves on stack: 11

Trying moves for
([1], ' _', [0, 0, 0, 1, 1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1, 0, 0], '_ ', [1, 1])
([1, 1], ' _', [1, 0, 0, 0])
([1, 1, 0, 0], '_ ', [1, 0])
([1, 1], ' _', [0, 0, 0, 1])
([1, 0], '_ ', [0, 0, 1, 1])
([1, 1], '_ ', [0, 0, 0, 1])
([1, 1, 1], '_ ', [0, 0, 0])
Number of moves on stack: 13

Trying moves for
([1, 1, 1], '_ ', [0, 0, 0])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1, 0, 0], '_ ', [1, 1])
([1, 1], ' _', [1, 0, 0, 0])
([1, 1, 0, 0], '_ ', [1, 0])
([1, 1], ' _', [0, 0, 0, 1])
([1, 0], '_ ', [0, 0, 1, 1])
([1, 1], '_ ', [0, 0, 0, 1])
Number of moves on stack: 12

Trying moves for
([1, 1], '_ ', [0, 0, 0, 1])


Moves on stack:
([0, 0, 0, 1, 1], ' _', [1])
([0, 0, 0, 1], ' _', [1, 1])
([0, 0, 1, 1, 0], '_ ', [1])
([0, 0, 1, 0, 1], ' _', [1])
([1, 0, 1, 0], ' _', [1, 0])
([0, 0, 1, 0], ' _', [1, 1])
([0, 1, 0, 0], '_ ', [1, 1])
([1, 1], ' _', [1, 0, 0, 0])
([1, 1, 0, 0], '_ ', [1, 0])
([1, 1], ' _', [0, 0, 0, 1])
([1, 0], '_ ', [0, 0, 1, 1])
([1], ' _', [0, 0, 0, 1, 1])
([], ' _', [0, 0, 0, 1, 1, 1])
Number of moves on stack: 13


([], ' _', [0, 0, 0, 1, 1, 1])
Game won!!

dfs analysed 24 states